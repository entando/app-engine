name: CYPRESS

env: 
  JOB_CONFIGURATION_TOKEN: ${{ secrets.JOB_CONFIGURATION_TOKEN }}
  OPENSHIFT_DOMAIN: ${{ secrets.OPENSHIFT_DOMAIN }}
  OPENSHIFT_SERVER_PORT: ${{ secrets.OPENSHIFT_SERVER_PORT }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  ENTANDO_OPERATOR_SOURCE: "entando-catalog-7-1-3"
  ENTANDO_APP_DBMS: "postgresql"
  ENTANDO_APP_USED: "eap"
  IMAGE_REGISTRY: entando/app-engine-eap:7.2.0-ENG-4504-PR-45
  IMAGE_REGISTRY_USER: ${{ secrets.ENTANDO_OPT_DOCKER_USERNAME }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.ENTANDO_OPT_DOCKER_PASSWORD }}
  NAMESPACE: "test-cypress"

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      
jobs:
  prepare-namespace:
    name: Prepare namespace
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
    - name: Login to OpenShift with JobConfiguration
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: https://api.${{ env.OPENSHIFT_DOMAIN }}:${{ env.OPENSHIFT_SERVER_PORT }}
        openshift_token: ${{ env.JOB_CONFIGURATION_TOKEN }}
        insecure_skip_tls_verify: true
#    - name: Create namespace
#      run: oc create namespace ${{ env.NAMESPACE }}
#    - name: Create ServiceAccount
#      run: |
#        service_account_manifest="${{ secrets.SERVICE_ACCOUNT_MANIFEST }}"
#        echo "${service_account_manifest//"{{namespace}}"/"${{ env.NAMESPACE }}"}" > service-account-manifest.yaml
#        oc apply -f service-account-manifest.yaml
#    - name: Create Role
#      run: |
#        role_manifest="${{ secrets.ROLE_MANIFEST }}"
#        echo "${role_manifest//"{{namespace}}"/"${{ env.NAMESPACE }}"}" > role-manifest.yaml
#        oc apply -f role-manifest.yaml
#    - name: Create RoleBinding
#      run: |
#        role_binding_manifest="${{ secrets.ROLE_BINDING_MANIFEST }}"
#        echo "${role_binding_manifest//"{{namespace}}"/"${{ env.NAMESPACE }}"}" > role-binding-manifest.yaml
#        oc apply -f role-binding-manifest.yaml
    - name: Export new ServiceAccount token
      id: step1
      run: | 
        secrets=($(oc get secrets -n $(echo ${{ env.NAMESPACE }}) -o name))
        for secret in "${secrets[@]}"
        do
            if [[ $secret == "secret/test-cypress-token"* ]]; then
                echo "Found it"
                secret_name="${secret#secret/}"
                echo $secret_name
                token=($(oc get secret test-cypress-token-hnjbs -n test-cypress -o jsonpath='{.data.token}' | base64 --decode))        
                echo $token
                echo "::save-state name=test::eyJhbGciOiJSUzI1NiIsImtpZCI6IkE2ZmUtU3hacVpHUExUREhmN0h5N00xdE5fZ2ZmZkluTTMybjlxOEQ4WWsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0ZXN0LWN5cHJlc3MiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoidGVzdC1jeXByZXNzLXRva2VuLWhuamJzIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InRlc3QtY3lwcmVzcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjAwZGY1MGFlLTYyNDEtNDYxMi05MDIwLTU2YjVkMzZiOTQ0NCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDp0ZXN0LWN5cHJlc3M6dGVzdC1jeXByZXNzIn0.YpoKfaotEu6D1GSqZFVl3XugeYVuTjWImjE0SEXXSAqvwZpNjyvZb4d8hI7gDi--qhpXMCqhqIT__lMSq4rqSJf8QkUvWHgPg7_khJYrLIV7ABUUQnRJEtdqjEeFPAEJZz1RzKQEhzLw2gHFtmHKTgfVO-vvGTMw0DtjjlIlM2ptvNBkiDrSlelwL80qxql2DclLtVcBra9yj9GlI9UyFBhb1KMhPWzC9WbOkFd12qmFWUp4gR6dtvfk8ZNpqCAN3n7dsFJfQqnEmD_-VfxRG_2j5b8AyTsPb6eDSp80m3pG-pvdcmRPSyBh0HMZh89ZVYFXWO15c58SlXGRJwrkO8-Vgoy93IIqckdNodlVNX-ZxRVGM2QgWbAozZdPq8T-JFz4jn9lpqKllcTqDsCcfhWmV5aHvD9SN5hueuehVzjR_N6paZ0hEteFZ3z0KAQMEILDpyb_JAPuCGA2J-zJsqgWKDaStd2FIlGm_7FxGAQrFmRG5pOfGMqlnA7U7s6BNQ-3M-fDgZzO541OQTO-JJegzaryVwk-NiSxYhNx9VYSKmUxqsjwXkPfqlnzNPJLWELrYUOhlHntF2pGGiNPX71MAymWdISYVY0F1rv_6dxEBbYie33OiHQDtI7nbO_K2S-SDyCCOJym-hUeRjxK7hU7Jr1KNpjJqvb6Vtg2aQ8"
                break
            fi
        done
#                token=($(oc get secret $secretName -n $(echo ${{ env.NAMESPACE }}) -o jsonpath='{.data.token}' | base64 --decode))        
#                token=($(oc get secret test-cypress-token-hnjbs -n test-cypress -o jsonpath='{.data.token}' | base64 --decode))        
# echo "SERVICE_ACCOUNT_TOKEN=$token" >> $GITHUB_ENV


  install-entando-app:
    name: Install EntandoApp
    runs-on: ubuntu-latest
    needs: prepare-namespace
    steps:
    - name: Print output of previous job
#      run: echo ${{ needs.prepare-namespace.outputs.output1 }}
      run: echo ${{ steps.prepare-namespace.outputs.test }}
    - name: Login to OpenShift with new ServiceAccount
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: https://api.${{ env.OPENSHIFT_DOMAIN }}:${{ env.OPENSHIFT_SERVER_PORT }}
        openshift_token: ${{ steps.prepare-namespace.outputs.test }}
        #openshift_token: ${{ env.JOB_CONFIGURATION_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.NAMESPACE }}
    - name: Create Operator Group
      run: |
        manifest="${{ secrets.OPENSHIFT_OPERATOR_GROUP }}"
        echo "${manifest//"{{namespace}}"/"${{ env.NAMESPACE }}"}" > operator-group-manifest.yaml
        oc apply -f operator-group-manifest.yaml
    - name: Install Operator
      run: |
        subscription_manifest="${{ secrets.OPENSHIFT_SUBSCRIPTION_MANIFEST }}"
        subscription_manifest=$"${subscription_manifest//"{{namespace}}"/"${{ env.NAMESPACE }}"}"
        echo "${subscription_manifest//"{{source}}"/"${{ env.ENTANDO_OPERATOR_SOURCE }}"}" > subscription-manifest.yaml
        oc apply -f subscription-manifest.yaml
    - name: Install EntandoApp
      run: |
        entando_app_manifest="${{ secrets.OPENSHIFT_ENTANDO_APP_MANIFEST }}"
        entando_app_manifest=$"${entando_app_manifest//"{{namespace}}"/"${{ env.NAMESPACE }}"}"
        entando_app_manifest=$"${entando_app_manifest//"{{dbms}}"/"${{ env.ENTANDO_APP_DBMS }}"}"
        entando_app_manifest=$"${entando_app_manifest//"{{appname}}"/"${{ env.NAMESPACE }}"}"
        entando_app_manifest=$"${entando_app_manifest//"{{appused}}"/"${{ env.ENTANDO_APP_USED }}"}"
        echo "${entando_app_manifest//"{{openshift_url}}"/"okd4-10.awsentando.net"}" > entando-app-manifest.yaml
        oc apply -f entando-app-manifest.yaml
  delete-namespace:
    name: Delete namespace
    runs-on: ubuntu-latest
    needs: install-entando-app
    #if: always()
    if: false
    steps:
    - name: Login to OpenShift with JobConfiguration
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: https://api.${{ env.OPENSHIFT_DOMAIN }}:${{ env.OPENSHIFT_SERVER_PORT }}
        openshift_token: ${{ env.JOB_CONFIGURATION_TOKEN }}
        insecure_skip_tls_verify: true
    - name: Delete namespace
      run: oc delete namespace ${{ env.NAMESPACE }}